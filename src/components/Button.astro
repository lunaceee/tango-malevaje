---
export interface ButtonProps {
  variant?: "primary" | "secondary" | "outline" | "danger";
  size?: "sm" | "md" | "lg";
  onclick?: () => void;
  disabled?: boolean;
  url?: string;
}

const {
  variant = "primary",
  size = "md",
  onclick,
  disabled = false,
  url,
} = Astro.props as ButtonProps;

const variants = {
  primary: "bg-sky-600 hover:bg-sky-700 text-white",
  secondary: "bg-gray-600 hover:bg-gray-700 text-white",
  outline:
    "border-zinc-900 border-2 hover:bg-gradient-to-l hover:from-emerald-500 hover:to-sky-400",
  danger: "bg-red-600 hover:bg-red-700 text-white",
};

const sizes = {
  sm: "px-3 py-1 text-sm",
  md: "px-4 py-2 text-base",
  lg: "px-6 py-3 text-lg",
};

const baseClasses = `rounded-lg inline-block text-center font-semibold transition duration-200 ease-in-out focus:outline-none focus:ring focus:ring-opacity-50 my-4 ${variants[variant] || variants.primary} ${sizes[size] || sizes.md}`;
const disabledClasses = disabled
  ? "opacity-50 cursor-not-allowed pointer-events-none"
  : "cursor-pointer";
---

{
  url ? (
    <a
      href={disabled ? undefined : url}
      target="_blank"
      rel="noopener noreferrer"
      class={`${baseClasses} ${disabledClasses}`}
    >
      <slot />
    </a>
  ) : (
    <button
      class={`${baseClasses} ${disabledClasses}`}
      onclick={onclick}
      disabled={disabled}
    >
      <slot />
    </button>
  )
}
